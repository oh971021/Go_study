/*
 == TDD ==

  - 무조건 좋은 것은 아니다.
  - 설계 문서를 기반으로 QA ( 가이드라인 ) 를 만드는데,
    이 부분에서 TDD를 하면 테스트를 미리 해봄으로써 설계를 확실하게 할 수 있다.
  - 유지보수가 용이하다. ( test-case가 촘촘하고, 자동화가 된다. )
  - 산탄총 코드, 스파게티 코드 ( 종속성난무한 코드 ) 에서도 유지보수 용이하다.
  - 계획 및 설계 보다는 테스트를 먼저하고, ( 테스트 -> 실패 -> 성공 -> 성공강화 -> 테스트 )

  - User Stroy 기반의 Test case 를 만들기 어렵다.
  - Unit-test 이기 때문이다. ( 기능별 관계를 테스트 하기보다는 각각 테스트 하기 때문 )

*/

package main

func main() {

}
